services:
  # Flask Backend
  backend:
    image: conf-room-booking
    container_name: flask-backend
    ports:
      - 5000:5000
    environment:
      - FLASK_ENV=production
    depends_on:
      - postgres
    networks:
      - my-network

  # Postgres Database
  postgres:
    image: postgres:13
    container_name: postgres-db
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - 5432:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - my-network
  
  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin-conf-room
    env_file: .env
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
    ports:
      - 5050:80
    depends_on:
      - postgres
    restart: unless-stopped
    networks:
      - my-network

volumes:
  postgres_data:
    driver: local

networks:
  my-network:
    driver: bridge 
